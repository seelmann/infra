---

- name: Create data directory
  file:
    path: /srv/nextcloud
    state: directory

- name: Pull Nextcloud docker image
  docker_image:
    name: nextcloud
    tag: 12

- name: Run Nextcloud docker container
  docker_container:
    name: nextcloud
    image: nextcloud:12
    restart_policy: always
    ports:
      - '8080:80'
    log_driver: syslog
    volumes: 
      - '/srv/nextcloud:/var/www/html'


- name: Check if Nextcloud is set up
  shell: "{{occ}} status | grep 'installed. true'"
  register: installed_result
  failed_when: installed_result.rc != 0 and installed_result.rc != 1
  changed_when: installed_result.rc == 1

- name: Setup Nextcloud
  shell: "{{occ}} maintenance:install --database 'sqlite' --database-name 'nextcloud' --admin-user 'ncadmin' --admin-pass '{{nextcloud_password}}'"
  when: installed_result.rc == 1


- name: Copy reverse proxy config
  template:
    src: reverseproxy.config.json.j2
    dest: /srv/nextcloud/config/reverseproxy.config.json
    owner: www-data
    group: www-data
    mode: 0660

- name: Import reverse proxy config
  shell: "{{occ}} config:import /var/www/html/config/reverseproxy.config.json"
  changed_when: False


- name: Enable LDAP
  shell: "{{occ}} app:enable user_ldap"
  register: enable_ldap_result
  changed_when: ("is already enabled" not in enable_ldap_result.stdout)
  failed_when: enable_ldap_result.rc != 0

- name: Check LDAP config
  shell: "{{occ}} app:enable user_ldap"
  register: ldap_config_result
  changed_when: False

- name: Create LDAP config
  shell: "{{occ}} ldap:create-empty-config"
  when: ('Invalid configID' in ldap_config_result.stdout)

- name: Copy LDAP config
  template:
    src: ldap.config.json.j2
    dest: /srv/nextcloud/config/ldap.config.json
    owner: www-data
    group: www-data
    mode: 0660

- name: Import LDAP config
  shell: "{{occ}} config:import /var/www/html/config/ldap.config.json"
  changed_when: False

