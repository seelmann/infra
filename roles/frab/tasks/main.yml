---

# TODO: run db:setup manually and obtain admin password

- name: Install packages
  apt: name={{item}} state=present
  with_items:
    - vim
    - sqlite3
    - openssl
    - imagemagick
    - libreadline-dev
    - file
    - nodejs
    - git
    - bzip2
    - zip
    - autoconf
    - bison
    - build-essential
    - libssl-dev
    - libyaml-dev
    - libreadline6-dev
    - zlib1g-dev
    - libncurses5-dev
    - libffi-dev
    - libgdbm3
    - libgdbm-dev
    - libsqlite3-dev

- name: Create frab user
  user:
    name: frab
    group: www-data
    shell: /bin/bash
    home: /home/frab

- name: Create frab www folder
  file:
    path: /var/www/frab
    state: directory
    mode: 0755
    owner: frab
    group: www-data

- name: Create frab log folder
  file:
    path: /var/log/frab
    state: directory
    mode: 0755
    owner: frab
    group: www-data

- name: Checkout rbenv/rbenv
  become_user: frab
  git:
    repo: 'https://github.com/rbenv/rbenv.git'
    dest: /home/frab/.rbenv
    version: v1.1.0

- name: Checkout rbenv/ruby-build
  become_user: frab
  git:
    repo: 'https://github.com/rbenv/ruby-build.git'
    dest: /home/frab/.rbenv/plugins/ruby-build
    version: v20170405

- name: Copy .rbenvrc
  become_user: frab
  copy:
    src: rbenvrc
    dest: /home/frab/.rbenvrc

- name: Enable rbenv
  become_user: frab
  blockinfile:
    path: /home/frab/.bashrc
    block: |
      . ~/.rbenvrc

- name: Check if ruby 2.3.4 is installed
  become_user: frab
  shell: "source /home/frab/.rbenvrc && ruby --version | grep '2.3.4'"
  args:
    executable: /bin/bash
  register: installed_result
  failed_when: installed_result.rc != 0 and installed_result.rc != 1
  changed_when: installed_result.rc == 1

- name: Install ruby 2.3.4
  become_user: frab
  shell: "source /home/frab/.rbenvrc && rbenv install 2.3.4 && rbenv global 2.3.4 && rbenv rehash"
  args:
    executable: /bin/bash
  when: installed_result.rc == 1

- name: Install bundler
  become_user: frab
  shell: "source /home/frab/.rbenvrc && gem install bundler && rbenv rehash"
  args:
    executable: /bin/bash

- name: Checkout frab/frab
  become_user: frab
  git:
    repo: "https://github.com/cko/frab.git"
    dest: /var/www/frab
    update: no
    version: "nixcon"

- name: Build frab
  become_user: frab
  shell: "source /home/frab/.rbenvrc && cd /var/www/frab && bundle install --path vendor/bundle --without='postgresql mysql'"
  args:
    executable: /bin/bash

- name: Copy database.yml
  become_user: frab
  copy:
    src: database.yml
    dest: /var/www/frab/config/database.yml

- name: Copy env.production
  become_user: frab
  template:
    src: env.production.j2
    dest: /var/www/frab/.env.production

- name: Build assets
  become_user: frab
  shell: "source /home/frab/.rbenvrc && cd /var/www/frab && bundle exec rake assets:precompile RAILS_ENV=production"
  args:
    executable: /bin/bash

#- name: Run db:setup
#  become_user: frab
#  shell: "source /home/frab/.rbenvrc && cd /var/www/frab && bundle exec rake db:setup RAILS_ENV=production"
#  args:
#    executable: /bin/bash

- name: Copy systemd service file
  copy:
    src: frab.service
    dest: /etc/systemd/system/frab.service

- name: Enable systemd service
  systemd:
    name: frab
    enabled: true
    state: restarted
    daemon_reload: yes


