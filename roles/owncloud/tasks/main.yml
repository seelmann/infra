---

- name: Install dependencies
  apt: name={{item}}
  with_items:
    - ca-certificates

- name: Add OwnCloud apt key
  apt_key: url=https://download.owncloud.org/download/repositories/8.2/Debian_8.0/Release.key state=present

- name: Add OwnCloud apt repository
  apt_repository: repo="deb http://download.owncloud.org/download/repositories/8.2/Debian_8.0/ /" state=present

- name: Configure MySQL
  debconf:
    name: mysql-server-5.5
    question: "{{item.q}}"
    value: "{{item.v}}"
    vtype: "{{item.t}}"
  with_items:
    - { q: mysql-server/root_password, v: "{{mysql_password}}", t: password }
    - { q: mysql-server/root_password_again, v: "{{mysql_password}}", t: password }
  changed_when: False

- name: Allow root access to MySQL
  template:
    src: root.cnf.j2
    dest: /root/.my.cnf
    owner: root
    group: root
    mode: 0600

- name: Install OwnCloud
  apt: name=owncloud

- name: Check if OwnCloud is set up
  shell: "{{occ}} status | grep 'installed. true'"
  register: installed_result
  failed_when: installed_result.rc != 0 and installed_result.rc != 1
  changed_when: installed_result.rc == 1

- name: Setup OwnCloud
  shell: "{{occ}} maintenance:install --database 'mysql' --database-name 'owncloud'  --database-user 'root' --database-pass '{{mysql_password}}' --admin-user 'ocadmin' --admin-pass '{{owncloud_password}}'"
  when: installed_result.rc == 1


- name: Copy reverse proxy config
  template:
    src: reverseproxy.config.json.j2
    dest: /var/www/owncloud/config/reverseproxy.config.json
    owner: www-data
    group: www-data
    mode: 0660

- name: Import reverse proxy config
  shell: "{{occ}} config:import /var/www/owncloud/config/reverseproxy.config.json"
  changed_when: False


- name: Enable LDAP
  shell: "{{occ}} app:enable user_ldap"
  register: enable_ldap_result
  changed_when: ("is already enabled" not in enable_ldap_result.stdout)
  failed_when: enable_ldap_result.rc != 0

- name: Check LDAP config
  shell: "{{occ}} app:enable user_ldap"
  register: ldap_config_result
  changed_when: False

- name: Create LDAP config
  shell: "{{occ}} ldap:create-empty-config"
  when: ('Invalid configID' in ldap_config_result.stdout)

- name: Copy LDAP config
  template:
    src: ldap.config.json.j2
    dest: /var/www/owncloud/config/ldap.config.json
    owner: www-data
    group: www-data
    mode: 0660

- name: Import LDAP config
  shell: "{{occ}} config:import /var/www/owncloud/config/ldap.config.json"
  changed_when: False

